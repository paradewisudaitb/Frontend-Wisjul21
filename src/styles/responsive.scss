// https://css-tricks.com/snippets/sass/mixin-manage-breakpoints/
// Dengan perubahan secukupnya

$breakpoints: (
  'phone': 720px, // HP
  'tablet': 721px, // tablet
  'desktop': 961px, // desktop
  'large': 1201px, // big screen
) !default;

/// Mixin to manage responsive breakpoints
/// @author Hugo Giraudel
/// @author Josep Marcello
/// @author Jeremia Axel
/// @param {String} $breakpoint - Breakpoint name
/// @require $breakpoints
@mixin respond-to($used_breakpoints...) {
  // If the key exists in the map
  @each $breakpoint in $used_breakpoints {
    @if map-has-key($breakpoints, $breakpoint) {
      // Prints a media query based on the value
      @if $breakpoint == 'phone' {
        @media (max-width: map-get($breakpoints, $breakpoint)) {
          @content;
        }
      }
      @else if $breakpoint == 'tablet' {
        @media (min-width: map-get($breakpoints, 'tablet')) and (max-width: map-get($breakpoints, 'desktop') - 1px) {
          @content;
        }
      }
      @else if $breakpoint == 'desktop' {
        @media (min-width: map-get($breakpoints, 'desktop')) and (max-width: map-get($breakpoints, 'large') - 1px) {
          @content;
        }
      }
      @else if $breakpoint == 'large' {
        @media (min-width: map-get($breakpoints, $breakpoint)) {
          @content;
        }
      }
      // If the key doesn't exist in the map
      @else {
        @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
            + "Available breakpoints are: #{map-keys($breakpoints)}.";
      }
    }
  }
}
